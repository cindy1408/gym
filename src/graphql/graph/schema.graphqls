# GraphQL schema example
#
# https://gqlgen.com/getting-started/


type User {
  id: String!
  workoutCycleId: String
  firstName: String! 
  lastName: String!
  email: String!
  password: String!
  workoutCyle: WorkoutCycle
}

# user workout plan 
type WorkoutCycle {
    id: String!
    userId: String! 
    name: String!
    workoutPerDay: [WorkoutPerDay]
}

# workout per day 
type WorkoutPerDay {
    id: String!
    workoutCycleId: String!
    gymDay: String!
    exerciseId: String
    eachExercises: [eachExercises]
}

input CreateWorkoutPerDayInput {
  gymDay: String! 
}

# Each Exercise 
type EachExercise {
    id:String!
    workoutPerDayId: String!
    name: String!
    weight: Int!
    Unit: String!
    Sets: Int!
    Reps: Int!
}

input CreateEachExerciseInput {
    workoutPerDayId: String!
    name: String!
    weight: Int!
    Unit: String!
    Sets: Int!
    Reps: Int!
}


# base Exercise 
type BaseExercise {
    id: String! 
    name: String! 
    muscleGroup: String!
    specificParts: String!
    level: Int! 
    avoidGiven: String
    movementType: String!
}


type Body {
  name: String!
}

type MuscleGroup {
  name: String! 
}

type AvoidGiven {
  name: String
}
# muscle group

type MuscleGroupSpecific {
    id: String!
    muscleGroup: String! 
    specificParts: String! 
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input baseExerciseInput {
    name: String!
    muscleGroup: String!
    specificParts: String!
    level: Int! 
    avoidGiven: String
    movementType: String!
}

input muscleSpecificInput {
  name: String!
}



extend type Query {
  listAllBaseExercises: [BaseExercise]!

  getAllEachExercise: [EachExercise!]!

  getUserIdByUserEmail(input: String!): String!
  getAllUsers: [User!]!
}

extend type Mutation {
  createBaseExercise(input: baseExerciseInput): BaseExercise!
  updateBaseExercise(input: baseExerciseInput): BaseExercise!

  hydrateBaseExercise: [BaseExercise]!

  createUser(input: CreateUserInput!): User!

  createWorkoutPerDay(input: CreateWorkoutPerDayInput!): WorkoutPerDay!
  
  createEachExercise(input: CreateEachExerciseInput!): EachExercise!
}