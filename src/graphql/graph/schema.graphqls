# GraphQL schema example
#
# https://gqlgen.com/getting-started/

extend type Query {
  baseExercises: [BaseExercise]!
  getAllAvaliableBaseExercises: [String!]!
  getAllEachExercise: [EachExercise!]!
  getAllWorkoutDay: [WorkoutPerDay!]!
  getUserWorkoutPlansByEmail(input: String!): UserWorkoutPlan!
  getAllUserWorkoutPlans: [UserWorkoutPlan!]!
  getMuscleSpecifics(input: muscleSpecificInput): String!
  getUserIdByUserEmail(input: String!): String!
  getAllUsers: [User!]!
}

extend type Mutation {
  createBaseExercise(input: baseExerciseInput): BaseExercise!
  updateBaseExercise(input: baseExerciseInput): BaseExercise!
  hydrateBaseExercise: [BaseExercise]!
  createUser(input: CreateUserInput!): User!
  addUserWorkout(input: AddUserWorkoutInput!): WorkoutPerDay!
  increaseRep(input: increaseRepInput!): UserWorkoutPlan!
}

type MuscleGroup {
  id: String!
  name: String! 
}

type SpecificParts {
  id: String!
  name: String!
}

type AvoidGiven {
  id: String!
  name: String!
}

# base Exercise 
type BaseExercise {
    id: String! 
    name: String! 
    muscleGroup: String!
    specificParts: String!
    level: Int! 
    avoidGiven: String
    movementType: String!
}

type User {
  id: String! 
  firstName: String! 
  lastName: String!
  email: String!
  password: String!
  UserWorkoutPlanId: String
}

# user workout plan 
type UserWorkoutPlan {
    userId: String! 
    name: String!
    workoutPerDayId: String
}

# workout per day 
type WorkoutPerDay {
    id: String!
    gymDay: String!
    exerciseID: String!
}

# Each Exercise 
type EachExercise {
    id: String!
    workoutPerDayID: String!
    name: String!
    weight: Int!
    Unit: String!
    Sets: Int!
    Reps: Int!
}

input AddUserWorkoutInput {
  userEmail: String!
  gymDay: String! 
  exercises: [EachExerciseInput!]
}

input EachExerciseInput {
    name: String!
    weight: Int!
    Unit: String!
    Sets: Int!
    Reps: Int!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input baseExerciseInput {
    name: String!
    muscleGroup: String!
    specificParts: String!
    level: Int! 
    avoidGiven: String
    movementType: String!
}

input muscleSpecificInput {
  name: String!
}

input increaseRepInput {
  userID: String!
  gymDay: String!
  exerciseName: String!
}